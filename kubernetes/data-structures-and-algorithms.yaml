apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: data-structures-and-algorithms
  name: data-structures-and-algorithms
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: data-structures-and-algorithms
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose.yml convert
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/data_structures_and_algorithms_network: "true"
        io.kompose.service: data-structures-and-algorithms
    spec:
      containers:
      - env:
        - name: TZ
          value: Asia/Hong_Kong
        image: ijohnnymiller/data-structures-and-algorithms:0.0.1-SNAPSHOT
        imagePullPolicy: ""
        name: data-structures-and-algorithms
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /logs
          name: data-structures-and-algorithms-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: data-structures-and-algorithms-claim0
        persistentVolumeClaim:
          claimName: data-structures-and-algorithms-claim0
status: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: data-structures-and-algorithms
  name: data-structures-and-algorithms
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    io.kompose.service: data-structures-and-algorithms
status:
  loadBalancer: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: data-structures-and-algorithms-claim0
  name: data-structures-and-algorithms-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
